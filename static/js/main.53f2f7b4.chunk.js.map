{"version":3,"sources":["components/Feedback/FeedbackButton.js","components/Feedback/Feedback.js","components/Statistics/Statistics.js","util/createId.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["Button","title","onLeaveFeedback","type","name","toLowerCase","onClick","Feedback","options","map","key","Statistic","stats","totalFeedback","positivePercentage","stat","uuidv4","Section","children","Notification","message","App","state","good","neutral","bad","stateStats","Object","entries","stateKeys","keys","e","target","value","setState","countTotalFeedback","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","Statistics","Component","ReactDOM","render","document","querySelector"],"mappings":"2NAceA,EAXA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,gBAAV,OACb,4BAAQC,KAAK,SAASC,KAAMH,EAAMI,cAAeC,QAASJ,GACvDD,ICeUM,EAfE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASN,EAAsB,EAAtBA,gBAC3B,OACE,6BACGM,EAAQC,KAAI,SAACL,GAAD,OACX,kBAAC,EAAD,CAAQM,IAAKN,EAAMH,MAAOG,EAAMF,gBAAiBA,S,QCJzD,IAmCeS,EAnCG,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,mBACzC,OACE,4BACGF,EAAMH,KAAI,SAACM,GAAD,OACT,wBAAIL,ICNCM,eDOH,2BACE,8BAAOD,EAAK,GAAZ,MACA,8BAAOA,EAAK,SAIlB,4BACE,2BACE,yCACA,8BAAOF,KAGX,4BACE,2BACE,qDACA,8BAAOC,EAAP,UERKG,EAdC,SAAC,GAAyB,IAAvBhB,EAAsB,EAAtBA,MAAOiB,EAAe,EAAfA,SACxB,OACE,iCACE,4BAAKjB,GACJiB,ICIQC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAKA,ICGOC,E,4MAGnBC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,WAAa,kBAAMC,OAAOC,QAAQ,EAAKN,Q,EACvCO,UAAY,kBAAMF,OAAOG,KAAK,EAAKR,Q,EAEnCpB,gBAAkB,SAAC6B,GAAO,IAChB3B,EAAS2B,EAAEC,OAAX5B,KACF6B,EAAQ,EAAKX,MAAMlB,GAEzB,EAAK8B,SAAL,eACG9B,EAAO6B,EAAQ,K,EAIpBE,mBAAqB,kBACnBR,OAAOS,OAAO,EAAKd,OAAOe,QAAO,SAACC,EAAKL,GAAN,OAAgBK,EAAML,IAAO,I,EAEhEM,gCAAkC,kBAChC,EAAKJ,qBAAuB,EACxBK,KAAKC,MAAO,EAAKnB,MAAMC,KAAO,EAAKY,qBAAwB,KAC3D,G,uDAGJ,OACE,kBAAC,EAAD,CAASlC,MAAM,kIACb,kBAAC,EAAD,CAASA,MAAM,yBACb,kBAAC,EAAD,CACEO,QAASkC,KAAKb,YACd3B,gBAAiBwC,KAAKxC,mBAI1B,kBAAC,EAAD,CAASD,MAAM,cACZyC,KAAKP,qBAAuB,EAC3B,kBAACQ,EAAD,CACE/B,MAAO8B,KAAKhB,aACZb,cAAe6B,KAAKP,qBACpBrB,mBAAoB4B,KAAKH,oCAG3B,kBAAC,EAAD,CAAcnB,QAAQ,4B,GA/CDwB,aCDjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.53f2f7b4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ title, onLeaveFeedback }) => (\r\n  <button type=\"button\" name={title.toLowerCase()} onClick={onLeaveFeedback}>\r\n    {title}\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"./FeedbackButton\";\r\n\r\nconst Feedback = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map((name) => (\r\n        <Button key={name} title={name} onLeaveFeedback={onLeaveFeedback} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedback.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Feedback;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport createId from \"../../util/createId\";\r\n\r\nconst Statistic = ({ stats, totalFeedback, positivePercentage }) => {\r\n  return (\r\n    <ul>\r\n      {stats.map((stat) => (\r\n        <li key={createId()}>\r\n          <p>\r\n            <span>{stat[0]}: </span>\r\n            <span>{stat[1]}</span>\r\n          </p>\r\n        </li>\r\n      ))}\r\n      <li>\r\n        <p>\r\n          <span>total: </span>\r\n          <span>{totalFeedback}</span>\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <span>positive feedback: </span>\r\n          <span>{positivePercentage} %</span>\r\n        </p>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistic.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\r\n  ),\r\n  totalFeedback: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistic;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default function createId() {\r\n  const id = uuidv4();\r\n  return id;\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <h2>{message}</h2>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\n\nimport Feedback from \"./Feedback/Feedback\";\nimport Statistics from \"./Statistics/Statistics\";\nimport Section from \"./Section/Section\";\nimport Notification from \"./Notification/Notification\";\n\nexport default class App extends Component {\n  static propTypes = {};\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  stateStats = () => Object.entries(this.state);\n  stateKeys = () => Object.keys(this.state);\n\n  onLeaveFeedback = (e) => {\n    const { name } = e.target;\n    const value = this.state[name];\n\n    this.setState({\n      [name]: value + 1,\n    });\n  };\n\n  countTotalFeedback = () =>\n    Object.values(this.state).reduce((acc, value) => acc + value, 0);\n\n  countPositiveFeedbackPercentage = () =>\n    this.countTotalFeedback() > 0\n      ? Math.round((this.state.good / this.countTotalFeedback()) * 100)\n      : 0;\n\n  render() {\n    return (\n      <Section title=\"Задание 1 - Виджет отзывов\">\n        <Section title=\"Please leave feedback\">\n          <Feedback\n            options={this.stateKeys()}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              stats={this.stateStats()}\n              totalFeedback={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Section>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n// import './base.css';\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}